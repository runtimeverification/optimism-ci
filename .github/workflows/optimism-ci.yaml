---
name: 'Client: Optimism'
on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: 'Branch Name to Test From'
        required: true
      extra_args:
        description: 'Additional Arguments to for run_kontro.sh '
        required: false
      statuses_sha:
        description: 'SHA of the commit to report back to'
        required: true
      org:
        description: 'Organization to run the test for'
        required: true
      repository:
        description: 'Repository to run the test for'
        required: true
      auth_token:
        description: 'GitHub PAT to use for API calls'
        required: true

# Multiple Runs will need to be allowed to queue
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event.inputs.branch_name }}
  cancel-in-progress: true

jobs:
  optimism:
    name: 'Optimism Kontrol CI'
    runs-on: [self-hosted, linux, kaas]
    steps:
      - name: Report Pending Status
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ github.event.inputs.auth_token }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.event.inputs.org }}/${{ github.event.inputs.repository }}/statuses/${{ github.event.inputs.statuses_sha }} \
            -d '{"state":"pending","target_url":"https://github.com/${{ github.event.inputs.org }}/${{ github.event.inputs.repository }}/actions/runs/${{ github.run_id }}","description":"Proofs Pending","context":"runtimeverification/proof-runner"}'
        
      - name: "Install KaaS"
        uses: runtimeverification/install-kaas@v0.1.0
        with:
          github-token: ${{ secrets.JENKINS_GITHUB_PAT }}
        
      # - name: "Checkout Optimism"
      #   uses: actions/checkout@v4
      #   with:
      #     repository: 'ethereum-optimism/optimism'
      #     token: ${{ secrets.JENKINS_GITHUB_PAT }}
      #     path: 'optimism'
      #     ref: ${{ github.event.inputs.branch_name }}
      #     fetch-depth: 0
      #     submodules: 'recursive'

      # - name: "Checkout Optimism (RV Fork)"
      #   uses: actions/checkout@v4
      #   with:
      #     repository: 'runtimeverification/_audits_Ethereum-optimism_pausability'
      #     token: ${{ secrets.JENKINS_GITHUB_PAT }}
      #     path: 'optimism'
      #     ref: ${{ github.event.inputs.branch_name }}
      #     fetch-depth: 0
      #     submodules: 'recursive'

      # - name: "Download KCFG's"
      #   shell: bash
      #   run: |
      #     pushd optimism/packages/contracts-bedrock > /dev/null
      #     kaas-cli --vault ${{ secrets.OPTIMISM_VAULT }} --token ${{ secrets.OPTIMISM_TOKEN }} download -d kout-proofs/
  
      # - name: 'Run Kontrol'
      #   shell: bash
      #   run: |
      #     set -xeu pipefail
      #     # Run the following in the running docker container
      #     pushd optimism/packages/contracts-bedrock > /dev/null
      #     # Need to checkout submodules, GH action doesn't do this properly. 
      #     git submodule update --init --recursive
      #     find . -name "run-kontrol.sh" -type f -exec {} ${{ github.event.inputs.extra_args }} \;

      # - name: 'KCFG Upload Results'
      #   shell: bash
      #   run: |
      #     pushd optimism/packages/contracts-bedrock > /dev/null
      #     kaas-cli --vault ${{ secrets.OPTIMISM_VAULT }} --token ${{ secrets.OPTIMISM_TOKEN }} upload-s3 -d kout-proofs/
      
      # - name: 'Upload results.tar.gz'
      #   if: always()
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: Kontrol Results
      #     path: optimism/**/results-*.tar.gz
      #     retention-days: 5

      - name: Report Pass Status
        if: always() && success()
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.JENKINS_GITHUB_PAT }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/runtimeverification/circleCI-TestBed/statuses/${{ github.event.inputs.statuses_sha }} \
            -d '{"state":"success","target_url":"https://github.com/runtimeverification/optimism-ci/actions/runs/${{ github.run_id }}","description":"Optimism Proof Execution Pending","context":"runtimeverification/optimism-ci"}'

      - name: Report Failure Status
        if: always() && failure()
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.JENKINS_GITHUB_PAT }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/runtimeverification/circleCI-TestBed/statuses/${{ github.event.inputs.statuses_sha }} \
            -d '{"state":"failure","target_url":"https://github.com/runtimeverification/optimism-ci/actions/runs/${{ github.run_id }}","description":"Optimism Proof Execution Pending","context":"runtimeverification/optimism-ci"}'
  